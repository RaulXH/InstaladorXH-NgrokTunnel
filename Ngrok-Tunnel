#!/data/data/com.termux/files/usr/bin/bash -e 
#
#
#
#		Programado por [ Raul XH ]
#
#
#	[ whoami ] ?
#
#
#
#
# | Copiar y pegar no es programar | 
#
#
#
#
#
#
#
#	Creditos a Raul XH  [ Original ]
#
#
#
#
#
# Colores
XH='\e[2;50;97m'
YELOW="\e[0;50;33m"
RED="\e[0;50;91m"
BLUE="\e[0;50;94m"
WHITE="\e[0;50;37m"
GREEN="\e[0;50;32m"
MOR="\e[0;50;95m"
GRIS="\e[0;50;90m"
FORT="\e[0m"
#
# variables
#
DPKG="$(dpkg --print-architecture)"
declare -r BIN=~/.ngrok2
declare -r PKG=pkg
#
#
rm -rf $PREFIX/bin/ngrok
rm -rf $BIN/ngrok
error()
{
	clear
	__Banner
	echo -e "\n${RED}[${YELOW}✗${RED}] ${WHITE}Hubo un error ${RED}[${YELOW}✗${RED}]${FORT}\n"
	rm -rf $OLD/archivo.txt
	rm -rf ngrok.*
	exit 0
}
trap error INT
until [[ $OSTYPE =~ ^linux-andr* ]]
do
	echo -e "\n${RED}[!] ${WHITE}Solo para termux ${RED}[!]${FORT}\n"
	exit 1 
done
until [[ $UID -ne 0 ]] 
do
	echo -e "\n${RED}[!] ${WHITE}Ejecute sin root ${RED}[!]${FORT}\n"
	exit 1
done
SystemNgrok()
{
	cat << OF > $PREFIX/bin/ngrok
#!/data/data/com.termux/files/usr/bin/bash -e
#
#		Script original
#
declare -r NGROK=~/.ngrok2/
declare -r RED='\e[2;50;91m'
declare -r GREEN='\e[2;50;92m'
declare -r WHITE='\e[2;50;39m'
declare -r FORT='\e[0m'
[[ ! -d \$NGROK/ ]] || [[ ! -f \$NGROK/ngrok ]] && printf "\${RED}\nNgrok no instalado\${FORT}\n\n \${GREEN}[✔] \${WHITE}Instale: https://github.com/RaulXH/NgrokSystem \${GREEN}[✔]\${FORT}\n\n" && exit 0
#
cd \$NGROK
#
proot -b \$PREFIX/etc:/etc ./\$(basename \$NGROK/ngrok) "\$@"
#
#		Creado por [ Raul XH ]
#
OF
chmod +x $PREFIX/bin/ngrok
}
__Package()
{
	echo -e "\n${YELOW}[!] ${WHITE}Instalando paquete necesario ${YELOW}[!]${FORT}\n"
	$PKG install aria2 ncurses-utils proot resolv-conf -y &>/dev/null
	clear
}
__downloadNgrok()
{
	clear
	__Banner
	mkdir -p $BIN
	local  NAME="ngrok.zip" 
	local  NAME2="ngrok.tgz"
	local -r LINK="https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip"
	local -r LINK2="https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm64.tgz"
	until [[ $DPKG = 'aarch64' ]]
	do
		rm -rf $NAME
		printf "\n${BLUE}[${YELOW}+${BLUE}]${WHITE} %s  ${BLUE}[${YELOW}+${BLUE}]${GRIS}\n\n" "Descargando ngrok con arquitectura $DPKG"
		aria2c  -c -x 10 -s 10 -o $NAME $LINK
		unzip $NAME -d $BIN
 		SystemNgrok
		printf "\n${BLUE}[${GREEN}+${BLUE}] ${WHITE}%s ${BLUE}[${GREEN}+${BLUE}]\n${BLUE}[${GREEN}+${BLUE}] ${WHITE}%s ${BLUE}[${GREEN}+${BLUE}]${GRIS}\n\n" "Ngrok instalado correctamente" "Pegue su token a continuacion"

		echo -ne "${GREEN}[${YELOW}✔${GREEN}]--➤${WHITE}" && read TOKEN
		if [[ -z $TOKEN ]]
		then
			printf "\n${RED}[${YELOW}!${RED}]${WHITE} %s ${RED}[${YELOW}!${RED}]${FORT}\n\n" "Ngrok Instalado sin token"

			rm -rf $NAME
			exit 1
		fi
		echo -e "$GRIS"
		ngrok authtoken $TOKEN	
		printf "
${GREEN}[${BLUE}✔${GREEN}] ${XH}Ejecucion: ngrok http 8080

${GREEN}[${BLUE}✱${GREEN}] ${XH}Ejecucion: ngrok tcp 3535${FORT}

"
		sleep 2
		rm -rf $NAME
		exit 0
	done
	until [[ $DPKG = 'arm' ]]
	do
		rm -rf $NAME2
		printf "\n${BLUE}[${YELOW}+${BLUE}]${WHITE} %s  ${BLUE}[${YELOW}+${BLUE}]${GRIS}\n\n" "Descargando ngrok con arquitectura $DPKG"
		aria2c  -c -x 10 -s 10 -o $NAME2 $LINK2
		sleep 1
		tar zxf "${NAME2}"  -C "$BIN"
		SystemNgrok
		printf "\n${BLUE}[${GREEN}+${BLUE}] ${WHITE}%s ${BLUE}[${GREEN}+${BLUE}]\n${BLUE}[${GREEN}+${BLUE}] ${WHITE}%s ${BLUE}[${GREEN}+${BLUE}]${GRIS}\n\n" "Ngrok instalado correctamente" "Pegue su token a continuacion"
	
		sleep 1
		echo -ne "${GREEN}[${YELOW}✔${GREEN}]--➤ ${WHITE}" && read TOKEN
		sleep 1
		if [[ -z $TOKEN ]]
		then
			printf "\n${RED}[${YELOW}!${RED}]${WHITE} %s ${RED}[${YELOW}!${RED}]${FORT}\n\n" "Ngrok Instalado sin token"
			rm -rf $NAME2
			exit 1
		fi
		echo -e "$GRIS"
		ngrok authtoken $TOKEN
		printf "
${GREEN}[${BLUE}✔${GREEN}] ${XH}Ejecucion: ngrok http 8080

${GREEN}[${BLUE}✔${GREEN}] ${XH}Ejecucion: ngrok tcp 3535${FORT}

"
		sleep 2
		SystemNgrok
		rm -rf $NAME2
		exit 0
	done
}
__Banner()
{
	printf "${GREEN}
	╔╗╔┌─┐┬─┐┌─┐┬┌─
	║║║│ ┬├┬┘│ │├┴┐
	╝╚╝└─┘┴└─└─┘┴ ┴${YELOW}XH

${FORT}"
}
[[ ! -f $PREFIX/bin/aria2c ]] || [[ ! -f $PREFIX/bin/proot ]] || [[ ! -f $PREFIX/etc/resolv.conf ]] && __Package
__downloadNgrok
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#			Programado por [ Raul XH ] 
